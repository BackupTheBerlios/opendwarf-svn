#!/bin/bash

set_hostname() {
    if [ "$new_host_name" != "$current_hostname" ]; then
    if [ "$new_host_name" == "" ]; then
	echo "nohostname" > /etc/hostname 
    else
        echo "$new_host_name" > /etc/hostname
    fi
    fi
}

make_resolv_conf() {
    if [ -n "$new_domain_name" -o -n "$new_domain_name_servers" ]; then
        local new_resolv_conf=/etc/resolv.conf.dhclient-new
        rm -f $new_resolv_conf
        if [ -n "$new_domain_name" ]; then
            echo search $new_domain_name >>$new_resolv_conf
        fi
        if [ -n "$new_domain_name_servers" ]; then
                   for nameserver in $new_domain_name_servers; do
                       echo nameserver $nameserver >>$new_resolv_conf
            done
        else # keep 'old' nameservers
            sed -n /^\w*[Nn][Aa][Mm][Ee][Ss][Ee][Rr][Vv][Ee][Rr]/p /etc/resolv.conf >>$new_resolv_conf
        fi
        chown --reference=/etc/resolv.conf $new_resolv_conf
        chmod --reference=/etc/resolv.conf $new_resolv_conf
        mv -f $new_resolv_conf /etc/resolv.conf
    fi
}


case "$reason" in
	MEDIUM|ARPCHECK|ARPSEND)
        # Do nothing
        ;;
    	PREINIT)

        if [ -n "$alias_ip_address" ]; then
            ifconfig $interface:0- inet 0
        fi

        ifconfig $interface inet 0 up

        sleep 1
        ;;


	BOUND|RENEW|REBIND|REBOOT)

        set_hostname
        
        if [ -n "$old_ip_address" -a -n "$alias_ip_address" -a \
             "$alias_ip_address" != "$old_ip_address" ]; then
            ifconfig $interface:0- inet 0
        fi

        if [ -n "$old_ip_address" -a \
             "$old_ip_address" != "$new_ip_address" ]; then
            ifconfig $interface inet 0
        fi

        if [ -z "$old_ip_address" -o "$old_ip_address" != "$new_ip_address" -o \
            "$reason" = "BOUND" -o "$reason" = "REBOOT" ]; then

            ifconfig $interface inet $new_ip_address $new_subnet_arg \
                $new_broadcast_arg $mtu_arg

            for router in $new_routers; do
                route add default dev $interface gw $router $metric_arg
            done
        fi

        if [ "$new_ip_address" != "$alias_ip_address" -a -n "$alias_ip_address" ];
            then
            ifconfig $interface:0- inet 0
            ifconfig $interface:0 inet $alias_ip_address $alias_subnet_arg
            route add -host $alias_ip_address $interface:0
        fi

	if [ "$new_swap_server" != "$current_swap_server" ]; then
		echo $new_swap_server > /etc/opendwarf/configserver
	fi

	if [ "$new_root_path" != "$current_root_path" ]; then
		echo $new_root_path > /etc/opendwarf/ldap.base
	fi

	
	if [ "$new_ntp_servers" != "$current_ntp_servers" ]; then	
		echo $new_ntp_servers > /etc/opendwarf/timeserver
	fi
	if [ "$new_log_servers" != "$current_log_servers" ]; then
		echo $new_log_servers > /etc/opendwarf/logserver
		cat /etc/syslog-ng/syslog-ng.conf | sed "s/destination\ df_devnull\ { file(\"\/dev\/null\"); };/destination\ df_devnull\ { udp (\"$new_log_servers\" port(514))\; };/" > /etc/syslog-ng/syslog-ng.conf.temp
		mv /etc/syslog-ng/syslog-ng.conf.temp /etc/syslog-ng/syslog-ng.conf
		rm -f /etc/syslog-ng/syslog-ng.conf.temp
	fi

        make_resolv_conf

        ;;

    EXPIRE|FAIL|RELEASE|STOP)
        if [ -n "$alias_ip_address" ]; then
            ifconfig $interface:0- inet 0
        fi

        if [ -n "$old_ip_address" ]; then
            ifconfig $interface inet 0
        fi

        if [ -n "$alias_ip_address" ]; then
            ifconfig $interface:0 inet $alias_ip_address $alias_subnet_arg
            route add -host $alias_ip_address $interface:0
        fi

        ;;

    TIMEOUT)
        if [ -n "$alias_ip_address" ]; then
            ifconfig $interface:0- inet 0
        fi

        ifconfig $interface inet $new_ip_address $new_subnet_arg \
            $new_broadcast_arg $mtu_arg

        set -- $new_routers
        first_router="$1"

        if ping -q -c 1 $first_router; then
            if [ "$new_ip_address" != "$alias_ip_address" -a \
                -n "$alias_ip_address" ]; then
                ifconfig $interface:0 inet $alias_ip_address $alias_subnet_arg
                route add -host $alias_ip_address dev $interface:0
            fi
	    
	    if [ "$new_subnet_mask" == "255.255.255.255" ]; then
	    	for router in $new_routers; do
	    	    route add -host $router dev $interface
	    	done
	    fi

            for router in $new_routers; do
                route add default dev $interface gw $router $metric_arg
            done

            make_resolv_conf
        else
            ifconfig $interface inet 0
        fi

        ;;
esac
  


